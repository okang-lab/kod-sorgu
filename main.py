import pandas as pd
import streamlit as st
import os
from datetime import datetime, timedelta

st.set_page_config(page_title="Kaffesa B2 Depo Kontrol Sistemi", layout="wide")

DATA_URL = "https://docs.google.com/spreadsheets/d/e/2PACX-1vT_O1wYfDZc1nlVcmfwY491muJSojVIP5tcW0ipegIzv_6JTHAINhO3gV_uiLrdvQ/pub?gid=1982264017&single=true&output=csv"
HAREKET_CSV = "hareketler.csv"

@st.cache_data
def load_data():
    df = pd.read_csv(DATA_URL)
    df = df.dropna(subset=["ParÃ§a Kodu"])  # BoÅŸ satÄ±rlarÄ± at
    return df

df = load_data()

# Hareket dosyasÄ± yoksa oluÅŸtur
if not os.path.exists(HAREKET_CSV):
    pd.DataFrame(columns=["Tarih", "Ä°ÅŸlem", "Kod", "Adet", "KullanÄ±cÄ±"]).to_csv(HAREKET_CSV, index=False)

st.title("ðŸ“¦ Kaffesa B2 Depo Kontrol Sistemi")

# MenÃ¼
secim = st.sidebar.radio("MenÃ¼", ["ParÃ§a Sorgu", "Hareket GiriÅŸi", "Hareket GeÃ§miÅŸi"])

# ------------------------- PARÃ‡A SORGU -------------------------
if secim == "ParÃ§a Sorgu":
    st.subheader("ParÃ§a Sorgu (BoÅŸluk ile birden fazla kod yazabilirsiniz)")
    input_kod = st.text_input("ParÃ§a KodlarÄ±nÄ± Girin (BoÅŸluk ile ayrÄ±lacak)").strip().upper()

    if input_kod:
        kod_listesi = input_kod.split()
        sonuc = df[df["ParÃ§a Kodu"].isin(kod_listesi)]

        if not sonuc.empty:
            st.dataframe(sonuc[["ParÃ§a Kodu", "ParÃ§a AdÄ±", "KONUM", "Marka", "Stok"]])
        else:
            st.warning("HiÃ§bir parÃ§a bulunamadÄ±.")

# ------------------------- HAREKET GÄ°RÄ°ÅžÄ° -------------------------
elif secim == "Hareket GiriÅŸi":
    st.subheader("ParÃ§a Hareket GiriÅŸi")

    hareket_tip = st.radio("Ä°ÅŸlem Tipi", ["AlÄ±m", "Ä°ade"])
    kullanici = st.text_input("KullanÄ±cÄ± Ä°smi")

    input_kod = st.text_input("ParÃ§a KodlarÄ±nÄ± Girin (BoÅŸluk ile ayrÄ±lacak)").strip().upper()
    adet = st.number_input("Adet", min_value=1, value=1)

    if st.button("Kaydet"):
        if input_kod and kullanici:
            kod_listesi = input_kod.split()
            mevcut_kodlar = df["ParÃ§a Kodu"].tolist()
            gecersiz_kodlar = [k for k in kod_listesi if k not in mevcut_kodlar]

            if gecersiz_kodlar:
                st.error(f"GeÃ§ersiz kodlar bulundu: {', '.join(gecersiz_kodlar)}")
            else:
                now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                df_hareket = pd.read_csv(HAREKET_CSV)
                for kod in kod_listesi:
                    yeni_kayit = pd.DataFrame([[now, hareket_tip, kod, adet, kullanici]],
                                              columns=["Tarih", "Ä°ÅŸlem", "Kod", "Adet", "KullanÄ±cÄ±"])
                    df_hareket = pd.concat([df_hareket, yeni_kayit], ignore_index=True)
                df_hareket.to_csv(HAREKET_CSV, index=False)
                st.success("Hareket baÅŸarÄ±yla kaydedildi!")
        else:
            st.warning("Kod ve kullanÄ±cÄ± alanÄ± boÅŸ olamaz!")

# ------------------------- HAREKET GEÃ‡MÄ°ÅžÄ° -------------------------
elif secim == "Hareket GeÃ§miÅŸi":
    st.subheader("Son 30 GÃ¼nlÃ¼k Hareketler")
    df_hareket = pd.read_csv(HAREKET_CSV)

    # Sadece son 30 gÃ¼n
    df_hareket["Tarih"] = pd.to_datetime(df_hareket["Tarih"])
    tarih_filtre = datetime.now() - timedelta(days=30)
    df_hareket = df_hareket[df_hareket["Tarih"] >= tarih_filtre]

    st.dataframe(df_hareket.sort_values("Tarih", ascending=False))
